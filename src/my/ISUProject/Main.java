/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.ISUProject;

import java.awt.Desktop;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Jaden Hums
 */
public class Main extends javax.swing.JFrame {

    File playerData = new File("playerData.txt");
    File teams = new File("teams.txt");
    ArrayList<String> playerStats = new ArrayList<>();
    ArrayList<String> players = new ArrayList<>();
    ArrayList<String> playersAvailable = new ArrayList<>();
    ArrayList<String> teamList = new ArrayList<>();
    ArrayList<String> sortNames = new ArrayList<>();
    ArrayList<Double> sortPoints = new ArrayList<>();
    Team team = new Team();

    /**
     * Creates new form ISUProjectUI
     */
    public Main() {
        initComponents();
        updateTeams();
        AutoCompleteDecorator.decorate(playersCombo);
        AutoCompleteDecorator.decorate(deleteCombo);
        AutoCompleteDecorator.decorate(editCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jDialog5 = new javax.swing.JDialog();
        jDialog6 = new javax.swing.JDialog();
        jDialog7 = new javax.swing.JDialog();
        jDialog8 = new javax.swing.JDialog();
        jDialog9 = new javax.swing.JDialog();
        jDialog10 = new javax.swing.JDialog();
        jDialog11 = new javax.swing.JDialog();
        jDialog12 = new javax.swing.JDialog();
        jDialog13 = new javax.swing.JDialog();
        jDialog14 = new javax.swing.JDialog();
        jDialog15 = new javax.swing.JDialog();
        jDialog16 = new javax.swing.JDialog();
        jDialog17 = new javax.swing.JDialog();
        jDialog18 = new javax.swing.JDialog();
        jDialog19 = new javax.swing.JDialog();
        jDialog20 = new javax.swing.JDialog();
        jDialog21 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        playerList = new javax.swing.JList();
        playersCombo = new javax.swing.JComboBox();
        tradeBtn = new javax.swing.JButton();
        toTradeCombo = new javax.swing.JComboBox();
        searchField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        sortedList = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        teamField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        positionField = new javax.swing.JTextField();
        pointsField = new javax.swing.JTextField();
        reboundsField = new javax.swing.JTextField();
        assistsField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        addPlayer = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        deleteCombo = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        editCombo = new javax.swing.JComboBox();
        sortByPoints = new javax.swing.JButton();
        sortByName = new javax.swing.JButton();
        teamCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        teamEdit = new javax.swing.JTextField();
        nameEdit = new javax.swing.JTextField();
        positionEdit = new javax.swing.JTextField();
        pointsEdit = new javax.swing.JTextField();
        reboundsEdit = new javax.swing.JTextField();
        assistsEdit = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        userManualBtn = new javax.swing.JButton();
        showPtsBtn = new javax.swing.JButton();
        showRebBtn = new javax.swing.JButton();
        showAstBtn = new javax.swing.JButton();
        showTeamBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog7Layout = new javax.swing.GroupLayout(jDialog7.getContentPane());
        jDialog7.getContentPane().setLayout(jDialog7Layout);
        jDialog7Layout.setHorizontalGroup(
            jDialog7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog7Layout.setVerticalGroup(
            jDialog7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog8Layout = new javax.swing.GroupLayout(jDialog8.getContentPane());
        jDialog8.getContentPane().setLayout(jDialog8Layout);
        jDialog8Layout.setHorizontalGroup(
            jDialog8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog8Layout.setVerticalGroup(
            jDialog8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog9Layout = new javax.swing.GroupLayout(jDialog9.getContentPane());
        jDialog9.getContentPane().setLayout(jDialog9Layout);
        jDialog9Layout.setHorizontalGroup(
            jDialog9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog9Layout.setVerticalGroup(
            jDialog9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog10Layout = new javax.swing.GroupLayout(jDialog10.getContentPane());
        jDialog10.getContentPane().setLayout(jDialog10Layout);
        jDialog10Layout.setHorizontalGroup(
            jDialog10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog10Layout.setVerticalGroup(
            jDialog10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog11Layout = new javax.swing.GroupLayout(jDialog11.getContentPane());
        jDialog11.getContentPane().setLayout(jDialog11Layout);
        jDialog11Layout.setHorizontalGroup(
            jDialog11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog11Layout.setVerticalGroup(
            jDialog11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog12Layout = new javax.swing.GroupLayout(jDialog12.getContentPane());
        jDialog12.getContentPane().setLayout(jDialog12Layout);
        jDialog12Layout.setHorizontalGroup(
            jDialog12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog12Layout.setVerticalGroup(
            jDialog12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog13Layout = new javax.swing.GroupLayout(jDialog13.getContentPane());
        jDialog13.getContentPane().setLayout(jDialog13Layout);
        jDialog13Layout.setHorizontalGroup(
            jDialog13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog13Layout.setVerticalGroup(
            jDialog13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog14Layout = new javax.swing.GroupLayout(jDialog14.getContentPane());
        jDialog14.getContentPane().setLayout(jDialog14Layout);
        jDialog14Layout.setHorizontalGroup(
            jDialog14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog14Layout.setVerticalGroup(
            jDialog14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog15Layout = new javax.swing.GroupLayout(jDialog15.getContentPane());
        jDialog15.getContentPane().setLayout(jDialog15Layout);
        jDialog15Layout.setHorizontalGroup(
            jDialog15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog15Layout.setVerticalGroup(
            jDialog15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog16Layout = new javax.swing.GroupLayout(jDialog16.getContentPane());
        jDialog16.getContentPane().setLayout(jDialog16Layout);
        jDialog16Layout.setHorizontalGroup(
            jDialog16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog16Layout.setVerticalGroup(
            jDialog16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog17Layout = new javax.swing.GroupLayout(jDialog17.getContentPane());
        jDialog17.getContentPane().setLayout(jDialog17Layout);
        jDialog17Layout.setHorizontalGroup(
            jDialog17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog17Layout.setVerticalGroup(
            jDialog17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog18Layout = new javax.swing.GroupLayout(jDialog18.getContentPane());
        jDialog18.getContentPane().setLayout(jDialog18Layout);
        jDialog18Layout.setHorizontalGroup(
            jDialog18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog18Layout.setVerticalGroup(
            jDialog18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog19Layout = new javax.swing.GroupLayout(jDialog19.getContentPane());
        jDialog19.getContentPane().setLayout(jDialog19Layout);
        jDialog19Layout.setHorizontalGroup(
            jDialog19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog19Layout.setVerticalGroup(
            jDialog19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog20Layout = new javax.swing.GroupLayout(jDialog20.getContentPane());
        jDialog20.getContentPane().setLayout(jDialog20Layout);
        jDialog20Layout.setHorizontalGroup(
            jDialog20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog20Layout.setVerticalGroup(
            jDialog20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog21Layout = new javax.swing.GroupLayout(jDialog21.getContentPane());
        jDialog21.getContentPane().setLayout(jDialog21Layout);
        jDialog21Layout.setHorizontalGroup(
            jDialog21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog21Layout.setVerticalGroup(
            jDialog21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerList.setEnabled(false);
        jScrollPane1.setViewportView(playerList);

        playersCombo.setEditable(true);
        playersCombo.setEnabled(false);

        tradeBtn.setText("Trade");
        tradeBtn.setEnabled(false);
        tradeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeBtnActionPerformed(evt);
            }
        });

        toTradeCombo.setEnabled(false);

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(searchList1);

        jScrollPane2.setViewportView(sortedList);

        jLabel6.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel6.setText("Add Player");

        jLabel8.setText("Team");

        jLabel9.setText("Name");

        jLabel10.setText("Position");

        jLabel11.setText("Points");

        jLabel12.setText("Rebounds");

        jLabel13.setText("Assists");

        addPlayer.setText("Add");
        addPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel14.setText("Delete Player");

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel15.setText("Edit Player");

        editCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editComboActionPerformed(evt);
            }
        });

        sortByPoints.setText("Sort By Points ↑");
        sortByPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByPointsActionPerformed(evt);
            }
        });

        sortByName.setText("Sort By Name ↑");
        sortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByNameActionPerformed(evt);
            }
        });

        teamCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamComboActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel2.setText("Select a team");

        jLabel1.setBackground(new java.awt.Color(153, 204, 255));
        jLabel1.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(50, 0, 0));
        jLabel1.setText(" Sports Management App");
        jLabel1.setOpaque(true);

        teamEdit.setEnabled(false);

        nameEdit.setEnabled(false);

        positionEdit.setEnabled(false);

        pointsEdit.setEnabled(false);

        reboundsEdit.setEnabled(false);

        assistsEdit.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel16.setText("Search By Team or Position");

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        userManualBtn.setText("User Manual");
        userManualBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualBtnActionPerformed(evt);
            }
        });

        showPtsBtn.setText("Show Pts");
        showPtsBtn.setEnabled(false);
        showPtsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPtsBtnActionPerformed(evt);
            }
        });

        showRebBtn.setText("Show Reb");
        showRebBtn.setEnabled(false);
        showRebBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRebBtnActionPerformed(evt);
            }
        });

        showAstBtn.setText("Show Ast");
        showAstBtn.setEnabled(false);
        showAstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAstBtnActionPerformed(evt);
            }
        });

        showTeamBtn.setText("Show Team");
        showTeamBtn.setEnabled(false);
        showTeamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTeamBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Your Players");

        jLabel4.setText("Players Available");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(teamField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pointsField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reboundsField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(assistsField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(reboundsEdit, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(pointsEdit)
                                            .addComponent(assistsEdit))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(positionEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                        .addComponent(nameEdit, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(teamEdit, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(userManualBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(exitBtn))))
                            .addComponent(editBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(teamCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(showTeamBtn)
                                            .addComponent(showRebBtn))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(showPtsBtn)
                                            .addComponent(showAstBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(8, 8, 8)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playersCombo, 0, 155, Short.MAX_VALUE)
                            .addComponent(toTradeCombo, 0, 155, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel4))
                            .addComponent(tradeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sortByName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sortByPoints))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sortByPoints)
                        .addComponent(sortByName))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(playersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(toTradeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tradeBtn)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(teamCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(showPtsBtn)
                                    .addComponent(showTeamBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(showAstBtn)
                                    .addComponent(showRebBtn)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel6)
                    .addComponent(editCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(teamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(deleteBtn)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(nameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(positionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pointsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(pointsEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reboundsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(reboundsEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assistsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(assistsEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPlayer)
                    .addComponent(editBtn))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exitBtn)
                        .addComponent(userManualBtn)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tradeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeBtnActionPerformed
        String player1 = playersCombo.getSelectedItem().toString();
        String player2 = toTradeCombo.getSelectedItem().toString();
        String replace1, replace2, team1;

        for (int i = 0; i < playerStats.size(); i++) {
            if (playerStats.get(i).contains(player1)) {
                String[] split = playerStats.get(i).split(";");
                team1 = split[0];
                replace1 = playerStats.get(i).replace(team1, team.getTeam());
                playerStats.set(i, replace1);

                for (int j = 0; j < playerStats.size(); j++) {
                    if (playerStats.get(j).contains(player2)) {
                        replace2 = playerStats.get(j).replace(team.getTeam(), team1);
                        playerStats.set(j, replace2);
                    }
                }
            }
        }
        try { //print out the user data again, updating the user which wanted to swtich password. 
            PrintWriter output = new PrintWriter(playerData);
            for (String playerStats1 : playerStats) {
                output.println(playerStats1);
            }
            output.close();
        } catch (FileNotFoundException ex) {
            System.out.printf("ERROR %s\n", ex);
        }
        updateTeamList();
        showPtsBtn.setEnabled(true);
        showTeamBtn.setEnabled(true);
        showRebBtn.setEnabled(true);
        showAstBtn.setEnabled(true);
    }//GEN-LAST:event_tradeBtnActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        searchList1.removeAll();
        String search = searchField.getText();
        ArrayList<String> player1 = new ArrayList<>();
        if (search.equals("Guard") || search.equals("Forward") || search.equals("Center")) {
            for (int i = 0; i < playerStats.size(); i++) {
                if (playerStats.get(i).contains(search)) {
                    String[] split = playerStats.get(i).split(";");
                    player1.add(split[1]);
                    searchList1.setModel(new javax.swing.AbstractListModel() {
                        ArrayList<String> strings = player1;

                        @Override
                        public int getSize() {
                            return strings.size();
                        }

                        @Override
                        public Object getElementAt(int i) {
                            return strings.get(i);
                        }
                    });
                }
            }
        } else if (search.equals("Denver Nuggets")
                || search.equals("Los Angeles Lakers")
                || search.equals("Los Angeles Clippers")
                || search.equals("Dallas Mavericks")
                || search.equals("Houston Rockets")
                || search.equals("Utah Jazz")
                || search.equals("Minnesota Timberwolves")
                || search.equals("Phoenix Suns")
                || search.equals("Portland Trail Blazers")
                || search.equals("Oklahoma City Thunder")
                || search.equals("Sacramento Kings")
                || search.equals("San Antonio Spurs")
                || search.equals("Memphis Grizzlies")
                || search.equals("New Orleans Pelicans")
                || search.equals("Golden State Warriors")) {
            for (int i = 0; i < playerStats.size(); i++) {
                if (playerStats.get(i).contains(search)) {
                    String[] split = playerStats.get(i).split(";");
                    player1.add(split[1]);
                    searchList1.setModel(new javax.swing.AbstractListModel() {
                        ArrayList<String> strings = player1;

                        @Override
                        public int getSize() {
                            return strings.size();
                        }

                        @Override
                        public Object getElementAt(int i) {
                            return strings.get(i);
                        }
                    });
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter team or position");
        }
    }//GEN-LAST:event_searchFieldActionPerformed

    private void addPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerActionPerformed
        Player player = new Player();
        boolean proceed;

        try {
            double userInput = Double.parseDouble(pointsField.getText());
            double userInput2 = Double.parseDouble(reboundsField.getText());
            double userInput3 = Double.parseDouble(assistsField.getText());
            proceed = true;
        } catch (NumberFormatException ignore) {
            proceed = false;
        }
        if (proceed == true) {
            player.setTeam(teamField.getText());
            player.setName(nameField.getText());
            player.setPosition(positionField.getText());
            player.setPoints(pointsField.getText());
            player.setRebounds(reboundsField.getText());
            player.setAssists(assistsField.getText());
            player.createPlayer();
            updateTeams();
            teamField.setText(null);
            nameField.setText(null);
            positionField.setText(null);
            pointsField.setText(null);
            reboundsField.setText(null);
            assistsField.setText(null);
        } else if (proceed == false) {
            JOptionPane.showMessageDialog(this, "Invalid Input");
        }
    }//GEN-LAST:event_addPlayerActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int j = JOptionPane.showConfirmDialog(this, "Confirm Delete");
        if (j == 0) {
            String delete = deleteCombo.getSelectedItem().toString();
            for (int i = 0; i < playerStats.size(); i++) {
                if (playerStats.get(i).contains(delete)) {
                    playerStats.remove(i);
                }
            }

            try {
                PrintWriter output = new PrintWriter(playerData);
                output.print("");
                for (String playerStat : playerStats) {
                    output.println(playerStat);
                }
                output.close();
            } catch (FileNotFoundException ex) {
                System.out.printf("ERROR %s\n", ex);
            }
            updateTeams();
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void sortByPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByPointsActionPerformed
        sortedList.removeAll();
        sortPoints.clear();
        ArrayList<String> sorted = new ArrayList<>();
        for (String playerStat : playerStats) {
            String[] split = playerStat.split(";");
            double temp = Double.parseDouble(split[3]);

            sortPoints.add(temp);
        }

        if (sortByPoints.getText().contains("↓")) {
            sortPoints = sortPointsAscending(sortPoints);
            sortByPoints.setText("Sort By Points ↑");
        } else {
            sortPoints = sortPointsDescending(sortPoints);
            sortByPoints.setText("Sort By Points ↓");
        }
        for (int i = 0; i < sortPoints.size(); i++) {
            sorted.add(Double.toString(sortPoints.get(i)));
        }
        for (int i = 0; i < sorted.size(); i++) {
            for (int j = 0; j < sorted.size(); j++) {
                String split[] = playerStats.get(j).split(";");
                if (split[3].equals(sorted.get(i))) {
                    sorted.set(i, players.get(j) + ": " + sorted.get(i));
                }
            }
        }
        sortedList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = sorted;

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
    }//GEN-LAST:event_sortByPointsActionPerformed

    private void sortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByNameActionPerformed
        sortedList.removeAll();
        sortNames.clear();
        for (String playerStat : playerStats) {
            String[] split = playerStat.split(";");
            sortNames.add(split[1]);
        }

        if (sortByName.getText().contains("↓")) {
            sortNames = sortStringAscending(sortNames);
            sortByName.setText("Sort By Name ↑");
        } else {
            sortNames = sortStringDescending(sortNames);
            sortByName.setText("Sort By Name ↓");
        }

        sortedList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = sortNames;

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
    }//GEN-LAST:event_sortByNameActionPerformed

    private void teamComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamComboActionPerformed
        team.clearPlayers();
        playerList.removeAll();
        playersAvailable.clear();
        String teamStr = teamCombo.getSelectedItem().toString();
        team.setTeam(teamStr);
        team.setPlayersOnly();
        toTradeCombo.setModel(new DefaultComboBoxModel(team.getPlayersOnly().toArray()));
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getPlayersOnly();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });

        for (String playerStat : playerStats) {
            if (!playerStat.contains(team.getTeam())) {
                String[] split = playerStat.split(";");
                String player = split[1];
                playersAvailable.add(player);
            }
        }
        playersCombo.setModel(new DefaultComboBoxModel(playersAvailable.toArray()));
        getContentPane().add(playersCombo);
        showPtsBtn.setEnabled(true);
        showTeamBtn.setEnabled(true);
        showRebBtn.setEnabled(true);
        showAstBtn.setEnabled(true);
        playerList.setEnabled(true);
        toTradeCombo.setEnabled(true);
        tradeBtn.setEnabled(true);
        playersCombo.setEnabled(true);
    }//GEN-LAST:event_teamComboActionPerformed

    private void editComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editComboActionPerformed
        String player = editCombo.getSelectedItem().toString();
        String editPlayer;
        for (String playerStat : playerStats) {
            if (playerStat.contains(player)) {
                editPlayer = playerStat;
                String[] split = editPlayer.split(";");
                teamEdit.setText(split[0]);
                nameEdit.setText(split[1]);
                positionEdit.setText(split[2]);
                pointsEdit.setText(split[3]);
                reboundsEdit.setText(split[4]);
                assistsEdit.setText(split[5]);
            }
        }
        teamEdit.setEnabled(true);
        nameEdit.setEnabled(true);
        positionEdit.setEnabled(true);
        pointsEdit.setEnabled(true);
        reboundsEdit.setEnabled(true);
        assistsEdit.setEnabled(true);
    }//GEN-LAST:event_editComboActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String player = editCombo.getSelectedItem().toString();
        boolean proceed;
        try {
            double userInput = Double.parseDouble(pointsEdit.getText());
            double userInput2 = Double.parseDouble(reboundsEdit.getText());
            double userInput3 = Double.parseDouble(assistsEdit.getText());
            proceed = true;
        } catch (NumberFormatException ignore) {
            proceed = false;
        }
        System.out.println(nameEdit.getText());
        if (proceed == true) {
            double temp1 = Double.parseDouble(pointsEdit.getText());
            double temp2 = Double.parseDouble(reboundsEdit.getText());
            double temp3 = Double.parseDouble(assistsEdit.getText());
            System.out.println(temp1 + " " + temp2 + " " + temp3);
            for (int i = 0; i < playerStats.size(); i++) {
                if (playerStats.get(i).contains(player)) {
                    System.out.println(playerStats.get(i));
                    playerStats.remove(i);
                    playerStats.add(teamEdit.getText() + ";" + nameEdit.getText() + ";"
                            + positionEdit.getText() + ";" + String.valueOf(temp1) + ";"
                            + String.valueOf(temp2) + ";" + String.valueOf(temp3));
                }
            }
            try {
                PrintWriter output = new PrintWriter(playerData);
                output.print("");
                for (String playerStat : playerStats) {
                    output.println(playerStat);
                }
                output.close();
            } catch (FileNotFoundException ex) {
                System.out.printf("ERROR %s\n", ex);
            }
            updateTeams();
            teamEdit.setText(null);
            nameEdit.setText(null);
            positionEdit.setText(null);
            pointsEdit.setText(null);
            reboundsEdit.setText(null);
            assistsEdit.setText(null);
            teamEdit.setEnabled(false);
            nameEdit.setEnabled(false);
            positionEdit.setEnabled(false);
            pointsEdit.setEnabled(false);
            reboundsEdit.setEnabled(false);
            assistsEdit.setEnabled(false);
        } else if (proceed == false) {
            JOptionPane.showMessageDialog(this, "Invalid Input");
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void userManualBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualBtnActionPerformed
        try {
            Desktop.getDesktop().browse(new URL("https://docs.google.com/document/d/1iZ_9PKa2-i4i14FtXcczY7LPhd-jezXuj72LVG5zm98/edit").toURI());
        } catch (MalformedURLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException | IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_userManualBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void showPtsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPtsBtnActionPerformed
        playerList.removeAll();
        team.clearStats();
        team.setStats();
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getPoints();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        showPtsBtn.setEnabled(false);
        showTeamBtn.setEnabled(true);
        showRebBtn.setEnabled(true);
        showAstBtn.setEnabled(true);
    }//GEN-LAST:event_showPtsBtnActionPerformed

    private void showRebBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRebBtnActionPerformed
        playerList.removeAll();
        team.clearStats();
        team.setStats();
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getRebounds();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        showPtsBtn.setEnabled(true);
        showTeamBtn.setEnabled(true);
        showRebBtn.setEnabled(false);
        showAstBtn.setEnabled(true);
    }//GEN-LAST:event_showRebBtnActionPerformed

    private void showAstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAstBtnActionPerformed
        playerList.removeAll();
        team.clearStats();
        team.setStats();
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getAssists();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        showPtsBtn.setEnabled(true);
        showTeamBtn.setEnabled(true);
        showRebBtn.setEnabled(true);
        showAstBtn.setEnabled(false);
    }//GEN-LAST:event_showAstBtnActionPerformed

    private void showTeamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTeamBtnActionPerformed
        playerList.removeAll();
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getPlayersOnly();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        showPtsBtn.setEnabled(true);
        showTeamBtn.setEnabled(false);
        showRebBtn.setEnabled(true);
        showAstBtn.setEnabled(true);
    }//GEN-LAST:event_showTeamBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public void updateTeamList() {
        playersAvailable.clear();
        team.clearPlayers();
        team.setPlayers();
        team.setPlayersOnly();
        team.clearStats();
        playerList.removeAll();

        toTradeCombo.setModel(new DefaultComboBoxModel(team.getPlayersOnly().toArray()));
        playerList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = team.getPlayersOnly();

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        for (String playerStat : playerStats) {
            if (!playerStat.contains(team.getTeam())) {
                String[] split = playerStat.split(";");
                String player = split[1];
                playersAvailable.add(player);
            }
        }
        playersCombo.setModel(new DefaultComboBoxModel(playersAvailable.toArray()));
    }

    private void updateTeams() {
        playerStats.clear();
        teamList.clear();
        players.clear();
        try {
            Scanner sc = new Scanner(teams);
            while (sc.hasNextLine()) {
                teamList.add(sc.nextLine());
            }
            Scanner sc2 = new Scanner(playerData);
            while (sc2.hasNextLine()) {
                playerStats.add(sc2.nextLine());
            }
            sc.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        teamCombo.setModel(new DefaultComboBoxModel(teamList.toArray()));
        for (String playerStat : playerStats) {
            String[] split = playerStat.split(";");
            players.add(split[1]);
        }
        sortedList.setModel(new javax.swing.AbstractListModel() {
            ArrayList<String> strings = players;

            @Override
            public int getSize() {
                return strings.size();
            }

            @Override
            public Object getElementAt(int i) {
                return strings.get(i);
            }
        });
        deleteCombo.setModel(new DefaultComboBoxModel(players.toArray()));
        editCombo.setModel(new DefaultComboBoxModel(players.toArray()));
    }

    public static ArrayList sortStringAscending(ArrayList<String> listIn) {
        for (int i = 0; i < listIn.size(); i++) { //repeat for list size
            int index = i; //set index to i
            for (int j = i + 1; j < listIn.size(); j++) {
                if (listIn.get(j).compareTo(listIn.get(index)) < 0) { //if list at j is less than list at index, make a swap
                    index = j; //searching for lowest index  
                }
            }
            if (index != i) { //if index does not equal to i, swap the list item at i with the item at index
                String temp = listIn.get(index);
                listIn.set(index, listIn.get(i));
                listIn.set(i, temp);
            }
        }
        return listIn;
    }

    public static ArrayList sortStringDescending(ArrayList<String> listIn) {
        for (int i = 0; i < listIn.size(); i++) { //repeat for list size
            int index = i; //set index to i
            for (int j = i + 1; j < listIn.size(); j++) {
                if (listIn.get(j).compareTo(listIn.get(index)) > 0) { //if list at j is less than list at index, make a swap
                    index = j; //searching for lowest index  
                }
            }
            if (index != i) { //if index does not equal to i, swap the list item at i with the item at index
                String temp = listIn.get(index);
                listIn.set(index, listIn.get(i));
                listIn.set(i, temp);
            }
        }
        return listIn;
    }

    public static ArrayList sortPointsAscending(ArrayList<Double> listIn) {
        for (int i = 0; i < listIn.size(); i++) { //repeat for list size
            int index = i; //set index to i
            for (int j = i + 1; j < listIn.size(); j++) {
                if (listIn.get(j) < listIn.get(index)) { //if list at j is less than list at index, make a swap
                    index = j; //searching for lowest index  
                }
            }
            if (index != i) { //if index does not equal to i, swap the list item at i with the item at index
                double temp = listIn.get(index);
                listIn.set(index, listIn.get(i));
                listIn.set(i, temp);
            }
        }
        return listIn;
    }

    public static ArrayList sortPointsDescending(ArrayList<Double> listIn) {
        for (int i = 0; i < listIn.size(); i++) { //repeat for list size
            int index = i; //set index to i
            for (int j = i + 1; j < listIn.size(); j++) {
                if (listIn.get(j) > listIn.get(index)) { //if list at j is less than list at index, make a swap
                    index = j; //searching for lowest index  
                }
            }
            if (index != i) { //if index does not equal to i, swap the list item at i with the item at index
                double temp = listIn.get(index);
                listIn.set(index, listIn.get(i));
                listIn.set(i, temp);
            }
        }
        return listIn;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlayer;
    private javax.swing.JTextField assistsEdit;
    private javax.swing.JTextField assistsField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox deleteCombo;
    private javax.swing.JButton editBtn;
    private javax.swing.JComboBox editCombo;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton exitBtn;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog10;
    private javax.swing.JDialog jDialog11;
    private javax.swing.JDialog jDialog12;
    private javax.swing.JDialog jDialog13;
    private javax.swing.JDialog jDialog14;
    private javax.swing.JDialog jDialog15;
    private javax.swing.JDialog jDialog16;
    private javax.swing.JDialog jDialog17;
    private javax.swing.JDialog jDialog18;
    private javax.swing.JDialog jDialog19;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog20;
    private javax.swing.JDialog jDialog21;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JDialog jDialog7;
    private javax.swing.JDialog jDialog8;
    private javax.swing.JDialog jDialog9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nameEdit;
    private javax.swing.JTextField nameField;
    private javax.swing.JList playerList;
    private javax.swing.JComboBox playersCombo;
    private javax.swing.JTextField pointsEdit;
    private javax.swing.JTextField pointsField;
    private javax.swing.JTextField positionEdit;
    private javax.swing.JTextField positionField;
    private javax.swing.JTextField reboundsEdit;
    private javax.swing.JTextField reboundsField;
    private javax.swing.JTextField searchField;
    private javax.swing.JList searchList1;
    private javax.swing.JButton showAstBtn;
    private javax.swing.JButton showPtsBtn;
    private javax.swing.JButton showRebBtn;
    private javax.swing.JButton showTeamBtn;
    private javax.swing.JButton sortByName;
    private javax.swing.JButton sortByPoints;
    private javax.swing.JList sortedList;
    private javax.swing.JComboBox teamCombo;
    private javax.swing.JTextField teamEdit;
    private javax.swing.JTextField teamField;
    private javax.swing.JComboBox toTradeCombo;
    private javax.swing.JButton tradeBtn;
    private javax.swing.JButton userManualBtn;
    // End of variables declaration//GEN-END:variables
}
